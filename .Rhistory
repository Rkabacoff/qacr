#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2", color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) | is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]), minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>% group_by(key, value) %>% summarize(n=n())
cdatl_b <- cdatl_a %>% group_by(key) %>% summarize(tot = sum(n))
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = n/ tot,
pctlabel = paste0(round(pct*100), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(cars74)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2", color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) | is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]), minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>% group_by(key, value) %>% summarize(n=n())
cdatl_b <- cdatl_a %>% group_by(key) %>% summarize(tot = sum(n))
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = n/ tot,
pctlabel = paste0(round(pct*100), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_minimal() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(cars74)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2", color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) | is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]), minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>% group_by(key, value) %>% summarize(n=n())
cdatl_b <- cdatl_a %>% group_by(key) %>% summarize(tot = sum(n))
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = n/ tot,
pctlabel = paste0(round(pct*100), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(coffee)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2",
color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) |
is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]),
minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>%
group_by(key, value) %>%
summarize(n=n(), .groups="drop")
cdatl_b <- cdatl_a %>%
group_by(key) %>%
summarize(tot = sum(n), .groups="drop")
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = n/ tot,
pctlabel = paste0(round(pct*100), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(coffee)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2",
color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) |
is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]),
minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>%
group_by(key, value) %>%
summarize(n=n(), .groups="drop")
cdatl_b <- cdatl_a %>%
group_by(key) %>%
summarize(tot = sum(n), .groups="drop")
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = (n/ tot)*100,
pctlabel = paste0(round(pct), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(coffee)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2",
color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) |
is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]),
minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>%
group_by(key, value) %>%
summarize(n=n(), .groups="drop")
cdatl_b <- cdatl_a %>%
group_by(key) %>%
summarize(tot = sum(n), .groups="drop")
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = (n/ tot)*100,
pctlabel = round(pct))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(coffee)
#' @param maxcat numeric. barcharts with more than this number of bars will not be plotted.
#' @param abbrev numeric. abbreviate bar labels to at most, this character length.
#' @return a ggplot graph
#' @examples
#' barcharts(cars74)
#' @rdname barcharts
#' @import tidyr
#' @import ggplot2
#' @import dplyr
#' @export
barcharts <- function(data, fill="deepskyblue2",
color="grey30", labels=TRUE,
maxcat=20, abbrev=20){
index <- sapply(data, function(x) is.factor(x) |
is.character(x)|is.logical(x))
cdata <- data[index]
# delete categories with more than n levels and print warning
if (length(cdata)==0){
stop("No variables are categorical.")
}
# delete categories with more than n levels and print warning
for(i in seq_along(cdata)){
cdata[[i]] <- as.factor(cdata[[i]])
}
index2 <- sapply(cdata, nlevels)
cdata2 <- cdata[index2 <= maxcat]
if (length(cdata2) == 0){
stop(paste("No variables had less then", maxcat+1, "category."))
}
if (length(cdata2) < length(cdata)){
cat("The following variable had more than", maxcat,
"levels and were not graphed:\n",
names(cdata[index2 > maxcat]),
"\n")
}
# abbreviate level labels
for(i in seq_along(cdata2)){
levels(cdata2[[i]]) <- abbreviate(levels(cdata2[[i]]),
minlength=abbrev)
}
cdata_long <- suppressWarnings(tidyr::gather(cdata2))
require(dplyr)
cdatl_a <- cdata_long %>%
group_by(key, value) %>%
summarize(n=n(), .groups="drop")
cdatl_b <- cdatl_a %>%
group_by(key) %>%
summarize(tot = sum(n), .groups="drop")
cdata_long <- inner_join(cdatl_a, cdatl_b, by="key") %>%
mutate(pct = (n/ tot)*100,
pctlabel = paste0(round(pct), "%"))
require(ggplot2)
require(scales)
p <- ggplot(data=cdata_long, aes(x=value, y=pct)) +
geom_bar(fill=fill, stat="identity") +
labs(x="Value", y="Percent", title="Bar charts") +
scale_y_continuous(breaks=pretty_breaks()) +
facet_wrap(~key, scale="free") +
theme_bw() + coord_flip()  +
theme(panel.grid.major.y=element_blank())
if(labels)
p <- p + geom_text(aes(label = pctlabel), hjust=1, size=3, color=color)
return(p)
}
barcharts(coffee)
histograms(coffee)
library(qacr)
library(pkgbuild)
build_site()
library(pkgbuild)
?pkgbuild_process
library(pkgdown)
build_site()
library(qacr)
library(pkgdown)
build_site()
library(qacr)
build_site()
library(qacr)
build_site()
tbl <- crosstab(cars74, cyl, gear, type = "colpercent")
plot(tbl, size=5)
plot(tbl, size=4)
plot(tbl, size=3)
plot(tbl, size=4)
tbl <- crosstab(cars74, cyl, gear, type = "freq")
plot(tbl, size=4)
library(qacr)
library(qacr)
build_site()
build_site()
library(qacr)
build_site()
build_site()
build_site()
build_site()
build_site()
?cardata
crosstab(cardata, driven_wheels, vehicle_size)
crosstab(cardata, driven_wheels, vehicle_size, plot=TRUE)
crosstab(cardata, vehicle_size, driven_wheels, plot=TRUE)
crosstab(cardata, vehicle_size, driven_wheels, type="colpercent", plot=TRUE)
crosstab(cardata, vehicle_size, driven_wheels, type="rowpercent", plot=TRUE)
crosstab(cardata, driven_wheels, vehicle_size, type="rowpercent", plot=TRUE)
build_site()
crosstab(cardata, transmission_type, driven_wheels, type="rowpercent", plot=TRUE)
build_site()
build_site()
df_summary(cardata)
crosstab(cardata, transmission_type, year, type="rowpercent", plot=TRUE)
build_site()
build_site()
build_site()
library(qacr)
build_site()
library(qacr)
build_site()
crosstab(contraception, wife_education, husband_education)
library(qacData)
crosstab(contraception, wife_education, husband_education)
crosstab(contraception, wife_education, husband_education, plot=TRUE)
crosstab(contraception, wife_education, husband_education, type="colpercent", plot=TRUE)
crosstab(contraception, contraceptive, wife_education, type="colpercent", plot=TRUE)
crosstab(contraception, contraceptive, wife_religion, type="colpercent", plot=TRUE)
crosstab(contraception, contraceptive, standard_of_living, type="colpercent", plot=TRUE)
scatter(contraception, wife_age, number_of_children_ever_born)
library(qacr)
?crosstab
library(qacr)
?crosstab
?switch
library(qacr)
?crosstab
library(qacr)
?crosstab
library(qacr)
?crosstab
library(qacr)
?crosstab
library(qacr)
?crosstab
library(qacr)
?crosstab
?ggplot
library(qacr)
library(qacr)
library(pkgdown)
build_site()
build_site()
