std <- function(x) {
if (is.numeric(x) & !is.factor(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
sapply(data, std)
}
x <- standardize(cars74)
x
standardize <- function(data, mean = 0, sd = 1) {
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
sapply(data, std)
}
data(cars74)
str(cars74)
x <- standardize(cars74)
str(x)
class(x)
if(!is.data.frame(data)) stop("data must be a data frame")
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i = 1:ncol(data)){
}
}
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i = 1:ncol(data)){
}
}
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i = 1:ncol(data)){
#hello
}
}
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
}
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- standardize(data[[i]])
}
return(data)
}
data(cars74)
x <- standardize(cars74)
class(cars74)
?standardize
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- standardize(data[[i]])
}
return(data)
}
data(cars74)
debug(standardize)
x <- standardize(cars74)
class(data)
class(data)
data[, i]
data[[i]]
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
return(sapply(data, std))
}
data(cars74)
x <- standardize(cars74)
View(x)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74)
debug(standardize)
x <- standardize(cars74)
data[, i]
data[, 2]
data[, 3]
data[, 3]
data
data
str(x)
x
?normalizePath
?normalize
?norm
normalize <- function(data, lower = 0, upper = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
rerange <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
xmin <- min(x)
xmax <- max(x)
x <- (upper - lower)/(xmax-xmin)*(x-xmin)+lower
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- rerange(data[[i]])
}
return(data)
}
data(cars74, package="cars74")
normalize <- function(data, lower = 0, upper = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
rerange <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
xmin <- min(x)
xmax <- max(x)
x <- (upper - lower)/(xmax-xmin)*(x-xmin)+lower
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- rerange(data[[i]])
}
return(data)
}
data(cars74, package="cars74")
data(cars74, package="qacr")
summary(cars74)
x <- normalize(cars74)
summarize(x)
summary(x)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
if(length(unique(x))>2){
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
x <- standardize(cars74)
data(cars74, package="cars74")
data(cars74, package="qacr")
x <- standardize(cars74)
summary(x)
x <- standardize(mtcars)
summary(mtcars)
summary(x)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
if(length(unique(x))>2){
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
}
return(x)
}
# for (i in 1:ncol(data)){
#   data[, i] <- std(data[[i]])
data <- lapply(data, std)
#}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
if(length(unique(x))>2){
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
table(mtcars$am)
mtcars
table(mtcars$vs)
unique(mtcars$vs)
unique(mtcars$am)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
if(unique(x) != c(0, 1)){
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
if(!all(unique(x) == c(0, 1))){
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
x <- unique(mtcars$am)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
# is this a dummy coded variable
values <- unique(x)
cond1 <- length(values) == 2
cond2 <- values[1] == 1
cond3 <- values[2] == 1
dummy <- cond1 & cond2 & cond3
if (is.numeric(x) & !dummy) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
x <- standardize(mtcars)
View(x)
debug(standardize)
x <- standardize(mtcars)
mtcars
data[,i]
unique(data[,i])
length(unique(data[,i]))
unique[,i][1] ==1
unique(data[,i])[1] ==1
unique(data[,i])
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
# is this a dummy coded variable
values <- unique(x)
cond1 <- length(values) == 2
cond2 <- values[1] == 0
cond3 <- values[2] == 1
dummy <- cond1 & cond2 & cond3
if (is.numeric(x) & !dummy) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
x <- standardize(mtcars)
View(x)
View(x)
unique(mtcars$am)
standardize <- function(data, mean = 0, sd = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
# is this a dummy coded variable
values <- unique(x)
values <- values[order(values)]
cond1 <- length(values) == 2
cond2 <- values[1] == 0
cond3 <- values[2] == 1
dummy <- cond1 & cond2 & cond3
if (is.numeric(x) & !dummy) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
x <- standardize(mtcars)
View(x)
normalize <- function(data, new_min = 0, new_max = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
rerange <- function(x) {
# is this a dummy coded variable
values <- unique(x)
values <- values[order(values)]
cond1 <- length(values) == 2
cond2 <- values[1] == 0
cond3 <- values[2] == 1
dummy <- cond1 & cond2 & cond3
if (is.numeric(x) & !dummy) {
x <- x[!is.na(x)]
oldmin <- min(x)
newmax <- max(x)
x <- (new_max - new_min)/(newmax-oldmin)*(x-oldmin)+new_min
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- rerange(data[[i]])
}
return(data)
}
x <- normalize(mtcars)
View(x)
standardize <- function(data, mean = 0, sd = 1,
include_dummy=FALSE) {
if(!is.data.frame(data)) stop("data must be a data frame")
std <- function(x) {
# is this a numeric variable
number <- is.numeric(x)
# is this a dummy coded variable
values <- unique(x)
values <- values[order(values)]
cond1 <- length(values) == 2
cond2 <- values[1] == 0
cond3 <- values[2] == 1
dummy <- cond1 & cond2 & cond3
# which variables to standardize
if (include_dummy){
doit <- number
} else {
doit <- number & !dummy
}
if (doit) {
x <- x[!is.na(x)]
x <- (x - mean(x)) / sd(x)
x <- x * sd + mean
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- std(data[[i]])
}
return(data)
}
data(cars74, package="qacr")
x <- standardize(cars74)
View(x)
x <- standardize(mtcars)
View(x)
library(qacr)
library(qacr)
library(pkgdown)
build_site()
build_site()
qstats(cars74)
qstats(cardata)
qstats(mtcars)
?qstats
qstats
library(qacr)
build_site()
build_site()
build_site()
build_site()
library(qacr)
build_site()
normalize2 <- function(data, new_min = 0, new_max = 1) {
if(!is.data.frame(data)) stop("data must be a data frame")
rerange <- function(x) {
if (is.numeric(x)) {
x <- x[!is.na(x)]
oldmin <- min(x)
newmax <- max(x)
x <- (new_max - new_min)/(newmax-oldmin)*(x-oldmin)+new_min
}
return(x)
}
for (i in 1:ncol(data)){
data[, i] <- rerange(data[[i]])
}
return(data)
}
x <- normalize2(mtcars)
data(mtcars)
force(mtcars)
View(mtcars)
View(mtcars)
View(x)
library(qacr)
build_site()
build_site()
build_site()
library(qacr)
build_site()
library(qacr)
build_site()
